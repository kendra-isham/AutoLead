{"ast":null,"code":"// import types\nimport { INPUT_SUCCESS, INPUT_FAIL } from \"../actions/types\"; // set initial state to message que\n\nconst initialState = {\n  messages: []\n}; // switch statement to tell how to update state \n\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  console.log(type);\n  let {\n    messages\n  } = state;\n\n  switch (type) {\n    case INPUT_SUCCESS:\n      messages = [...messages, {\n        message: payload,\n        type: \"user\"\n      }];\n      console.log(\"inside switch\");\n      return { ...state,\n        messages\n      };\n\n    case INPUT_FAIL:\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n\n  ;\n});","map":{"version":3,"sources":["/home/kendra/Desktop/modembot/client/src/reducers/watson.js"],"names":["INPUT_SUCCESS","INPUT_FAIL","initialState","messages","state","action","type","payload","console","log","message"],"mappings":"AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB,C,CAIA;;AACA,gBAAe,CAACC,KAAK,GAACF,YAAP,EAAqBG,MAArB,KAAgC;AAC3C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAI;AAACH,IAAAA;AAAD,MAAaC,KAAjB;;AAEA,UAAOE,IAAP;AACI,SAAKN,aAAL;AACIG,MAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc;AAAEO,QAAAA,OAAO,EAACH,OAAV;AAAmBD,QAAAA,IAAI,EAAC;AAAxB,OAAd,CAAX;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,EACH,GAAGL,KADA;AAEHD,QAAAA;AAFG,OAAP;;AAIJ,SAAKF,UAAL;AACI,aAAO,EACH,GAAGG;AADA,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGA;AADA,OAAP;AAbR;;AAgBC;AACJ,CAtBD","sourcesContent":["// import types\nimport { INPUT_SUCCESS, INPUT_FAIL } from \"../actions/types\";\n\n// set initial state to message que\nconst initialState = {\n    messages: [],\n};\n\n// switch statement to tell how to update state \nexport default (state=initialState, action) => {\n    const {type, payload} = action;\n    console.log(type);\n    let {messages} = state;\n\n    switch(type){\n        case INPUT_SUCCESS: \n            messages = [...messages, { message:payload, type:\"user\" }];\n            console.log(\"inside switch\");\n            return {\n                ...state,\n                messages,\n            };\n        case INPUT_FAIL:\n            return {\n                ...state,\n            };\n        default:\n            return {\n                ...state,\n            };  \n    };\n};"]},"metadata":{},"sourceType":"module"}