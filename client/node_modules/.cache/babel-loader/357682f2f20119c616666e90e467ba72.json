{"ast":null,"code":"var _jsxFileName = \"/home/kendra/Desktop/modembot/client/src/App.js\";\n// dependancies \nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Chat from \"./components/chat/Chat\";\nimport { createSession } from \"./actions/watson\";\nimport axios from \"axios\"; // checks to see if there's already a session\n// if there is, get a new session_id\n\nif (localStorage.session) {\n  delete axios.defaults.headers.common[\"session_id\"];\n  axios.defaults.headers.common[\"session_id\"] = localStorage.session;\n} else {\n  delete axios.defaults.headers.common[\"session_id\"];\n} // connect app to redux \n\n\nconst App = () => {\n  // creates session\n  // useEffect assists in creating session upon refresh\n  useEffect(() => {\n    store.dispatch(createSession());\n  });\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), console.log(\"in app.js\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/kendra/Desktop/modembot/client/src/App.js"],"names":["React","useEffect","Provider","store","Chat","createSession","axios","localStorage","session","defaults","headers","common","App","dispatch","console","log"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,IAAIC,YAAY,CAACC,OAAjB,EAA0B;AACxB,SAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,CAAP;AACAL,EAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CJ,YAAY,CAACC,OAA3D;AACD,CAHD,MAGO;AACL,SAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,CAAP;AACD,C,CAED;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAEhB;AACA;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACU,QAAN,CAAeR,aAAa,EAA5B;AACH,GAFQ,CAAT;AAKA,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMW,OAAO,CAACC,GAAR,CAAY,WAAZ,CAFN,CADF,CADF;AAQD,CAjBD;;AAmBA,eAAeH,GAAf","sourcesContent":["// dependancies \nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Chat from \"./components/chat/Chat\";\nimport { createSession } from \"./actions/watson\";\nimport axios from \"axios\";\n\n// checks to see if there's already a session\n// if there is, get a new session_id\nif (localStorage.session) {\n  delete axios.defaults.headers.common[\"session_id\"];\n  axios.defaults.headers.common[\"session_id\"] = localStorage.session;\n} else {\n  delete axios.defaults.headers.common[\"session_id\"];\n}\n\n// connect app to redux \nconst App = () => {\n\n  // creates session\n  // useEffect assists in creating session upon refresh\n  useEffect(() => {\n      store.dispatch(createSession());\n  });\n\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n          <Chat />\n           {console.log(\"in app.js\")}\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}